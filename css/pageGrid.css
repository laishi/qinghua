.pages-content {
    position: relative;
    width: 100%;
    height: 100vh;
    transition: width 0.5s, transform 0.5s;
}

.homePage {
    position: relative;
    width: 100%;
    min-height: 100vh;
    transition: width 0.5s, transform 0.5s;
}

.detailPage {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100vh;
    background-color: rgba(255, 0, 0, 0);
    transition: transform 0.5s;
    z-index: -1;
    cursor: pointer;
}

.homeHeader {
    width: 100%;
    height: 25vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: darkcyan;
    color: white;
}

.detailGrids {
    position: relative;
    display: flex;
    width: 80%;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    overflow: hidden;
    /* background-color: sienna; */
    padding: 2rem;
}

.gridsrow {
    display: flex;
    gap: 1rem;
    width: 100%;
}

.detailGrid {
    flex: 1;
    height: 38vh;
    background-color: rgb(255, 255, 255);
    border-radius: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    /* margin: 2rem; */
    transition: flex 0.5s ease, background-color 0.5s ease, box-shadow 0.3s ease;
    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2), 0px -1px 2px rgba(0, 0, 0, 0.2),
        1px 0px 2px rgba(0, 0, 0, 0.2), -1px 0px 2px rgba(0, 0, 0, 0.2);

}

.enddetailGrid {
    font-size: 1.5em;
}

.detailGrid>a {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
}

.detailGrid img {
    position: relative;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.detailGrid .gridInfo {
    position: absolute;
    width: 100%;
    height: 3em;
    bottom: -3em;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.5);
    color: rgb(200, 200, 200);
    text-align: center;
    transition: bottom 0.3s ease-in-out;
}

.detailGrid .gridInfo .infoKeywords {
    width: 100%;
    flex: 1;
    transition: flex 0.3s ease-in-out;
}


.detailGrid:hover .gridInfo {
    bottom: 0;
    color: rgb(255, 255, 255);
}


.detailGrid .gridInfo:hover {
    background-color: rgba(0, 0, 0, 0.8);
    color: rgb(255, 255, 255);
}

.detailGrid .gridInfo .infoKeywords:hover {
    flex: 3;
}

.detailGrid:hover {
    cursor: pointer;
    background-color: rgb(255, 255, 255);
    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2), 0px -5px 10px rgba(0, 0, 0, 0.2),
        5px 0px 10px rgba(0, 0, 0, 0.2), -5px 0px 10px rgba(0, 0, 0, 0.2);

}


.activeGrid {
    flex: 2;
}

.activeRow .detailGrid:not(.activeGrid) {
    flex: 0.8;
}

.detailGrid img {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 1rem;
}



.liquidGlass {
    position: absolute;
    float: left;
    width: 5em;
    height: 5em;
    top: 20%;
    left: 20%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: 600;
    font-size: 1.2em;
    border-radius: 100%;
    background: linear-gradient(135deg, rgba(255, 0, 150, 0.3), rgba(0, 229, 255, 0.3));
    backdrop-filter: blur(12px) saturate(180%);
    -webkit-backdrop-filter: blur(12px) saturate(180%);
    box-shadow:
        inset 0 0 0 1px rgba(255, 255, 255, 0.3),
        inset 0 4px 10px rgba(255, 255, 255, 0.1),
        0 8px 32px rgba(0, 0, 0, 0.2),
        0 0 0 2px rgba(255, 255, 255, 0.2);
    transform: translate(-50%, -50%);
    z-index: 1000;
    color: #fff;
    text-shadow: 0 0 3px rgba(0, 0, 0, 0.3);

    animation: breatheGlass 3s ease-in-out infinite;
}

/* 呼吸动画 */
@keyframes breatheGlass {
    0% {
        transform: translate(-50%, -50%) scale(1);
        box-shadow:
            inset 0 0 0 1px rgba(255, 255, 255, 0.3),
            inset 0 4px 10px rgba(255, 255, 255, 0.1),
            0 8px 32px rgba(0, 0, 0, 0.2),
            0 0 0 2px rgba(255, 255, 255, 0.2);
    }

    50% {
        transform: translate(-50%, -50%) scale(1.05);
        box-shadow:
            inset 0 0 0 1px rgba(255, 255, 255, 0.4),
            inset 0 6px 14px rgba(255, 255, 255, 0.15),
            0 12px 40px rgba(0, 0, 0, 0.25),
            0 0 0 3px rgba(255, 255, 255, 0.25);
    }

    100% {
        transform: translate(-50%, -50%) scale(1);
        box-shadow:
            inset 0 0 0 1px rgba(255, 255, 255, 0.3),
            inset 0 4px 10px rgba(255, 255, 255, 0.1),
            0 8px 32px rgba(0, 0, 0, 0.2),
            0 0 0 2px rgba(255, 255, 255, 0.2);
    }
}
















:root {
    --bubble-size: 50px;
    --bubble-color-start: #4dabf7;
    --bubble-color-end: #1c7cd6;
    --breathe-duration: 2s;
    --ripple-duration: 1s;
    --text-fade-duration: 0.5s;
    --easing: cubic-bezier(0.4, 0, 0.6, 1);
    --ripple-easing: cubic-bezier(0.4, 0, 0.2, 1);
}

#cicleloader-container {
    position: relative;
    width: 100%;
    height: 100vh;
}

#cicleloader-container iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: none;
    z-index: 999;
    display: none;
    clip-path: url(#circleClip);
    opacity: 0;
    transition: opacity var(--ripple-duration) var(--ripple-easing),
        filter 0.5s ease;
    filter: blur(5px);
}

#cicleloader-container iframe.loaded {
    display: block;
    opacity: 1;
    filter: blur(0);
}

#cicleloader-container svg.circleloader {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1000;
    pointer-events: none;
}

#cicleloader-container .bubble-loader {
    animation: breathe-loader var(--breathe-duration) var(--easing) infinite;
    filter: drop-shadow(0 0 15px rgba(29, 124, 214, 0.5));
}

#cicleloader-container .loaded .bubble-loader {
    display: none;
}

#cicleloader-container .clip-circle {
    r: var(--bubble-size);
}

#cicleloader-container .loaded .clip-circle {
    animation: ripple-loader var(--ripple-duration) var(--ripple-easing) forwards;
}

#cicleloader-container .loading-text {
    transition: opacity var(--text-fade-duration) ease;
}

#cicleloader-container .loaded .loading-text {
    opacity: 0;
}

@keyframes breathe-loader {

    0%,
    100% {
        r: var(--bubble-size);
        opacity: 0.9;
    }

    50% {
        r: calc(var(--bubble-size) * 1.2);
        opacity: 1;
    }
}

@keyframes ripple-loader {
    0% {
        r: var(--bubble-size);
    }

    100% {
        r: 150vmax;
    }
}

#cicleloader-container .error-text {
    color: white;
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1.5em;
    opacity: 0;
    animation: fadeIn 0.5s ease forwards;
}

@keyframes fadeIn {
    to {
        opacity: 1;
    }
}